{"version":3,"sources":["logo.svg","component/AddTask.js","component/TodoList.js","component/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","props","useState","name","setName","linkList","closeForm","showAddForm","Fragment","className","type","placeholder","onChange","e","target","value","onClick","addTask","TodoList","style","border","TaskList","setshowAddform","namep","push","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAAe,I,mBCoDAA,MAhDf,SAAiBC,GAEf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEOC,EAAW,WACZJ,EAAMK,aAeN,OAA0B,IAAtBL,EAAMM,YAEF,cAAC,EAAD,IAKA,cAAC,IAAMC,SAAP,UACI,sBAAKC,UAAU,YAAf,UACI,8CACA,sBAAKA,UAAU,aAAf,UACI,yCAEA,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,qBAAqBC,SAnB/E,SAACC,GAEhBT,EAAQS,EAAEC,OAAOC,aAqBJ,wBAAQL,KAAK,SAASD,UAAU,kBAAkBO,QA5BjD,WACjBf,EAAMgB,QAAQd,GACdE,KA0BgB,iBAGA,wBAAQK,KAAK,SAASD,UAAU,kBAAkBO,QAASX,EAA3D,wBCjCTa,MATf,SAAkBjB,GAEV,OAAO,6BAEH,oBAAKkB,MAAO,CAACC,OAAO,iBAApB,SAAuCnB,EAAME,UCwD1CkB,MAzDf,WAEA,MAAuCnB,oBAAS,GAAhD,mBAAOK,EAAP,KAAoBe,EAApB,KAEA,EAAsBpB,mBAAS,CAAC,SAAS,WAAzC,mBAAOqB,EAAP,KAeG,OAfH,MAeuB,IAAhBhB,EAEC,cAAC,EAAD,CAASU,QAPG,SAACd,GACfoB,EAAMC,KAAKrB,IAMkBG,UAXb,WACdgB,GAAe,MAiBP,sBAAKb,UAAU,YAAf,UACI,uBACA,uBAEA,wBAAQC,KAAK,SAASD,UAAU,0BAA0BO,QA1BxD,WACdM,GAAe,IAyBH,sBAEA,2CACA,wBAAOb,UAAU,sBAAjB,UAEQ,6BACI,gDAMAc,EAAME,KAAI,SAAAtB,GACN,OAAO,cAAC,EAAD,CAAUA,KAAMA,cCxC5CuB,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7113a46a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport React, { useState } from 'react';\r\nimport TaskList from './TaskList';\r\n\r\nfunction AddTask(props) {\r\n    // khai báo 1 hook để lấy giá trị nhập vào trong input\r\n  const [name, setName] = useState(\"\");\r\n// gọi tới arrow function closeForm của TaskList thay đổi giá trị showAddForm\r\n   const linkList = () => {\r\n        props.closeForm()\r\n    }\r\n    // gửi name nhập ở input qua addTask để nối vào mảng namep\r\n    // sau đó gọi tới linkList => closeForm để thay đổi showAddForm thành false\r\n   const handleAddTask = () => {\r\n        props.addTask(name);\r\n        linkList();\r\n    }\r\n    // cài đặt name từ giá trị nhập vào từ input\r\n    const isChangedName = (e) => {\r\n     \r\n           setName(e.target.value);\r\n        \r\n    }\r\n// nếu showAddForm === true quay về TaskList \r\n        if (props.showAddForm === true) {\r\n            return (\r\n                <TaskList />\r\n            )\r\n    // nếu showAddForm === false hiển thị ra màn hình như bên dưới\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"container\">\r\n                        <h2>Add New Task</h2>\r\n                        <div className=\"form-group\">\r\n                            <label>Name</label>\r\n                            {/* onchange khi có thay đổi gọi tới isChangedName cài  giá trị vào name*/}\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter name of task\" onChange={isChangedName} />\r\n                        </div>\r\n                            {/* onclick gọi tới hàm handleAddTask trong handleAddTask gọi tới addTask gửi name qua và cộng vào mảng namep\r\n                            sau đó gọi hàm linkList => gọi tới closeForm để cài đặt showAddForm, hiển thị ra màn hình giao diện TaskList */}\r\n                        <button type=\"submit\" className=\"btn btn-default\" onClick={handleAddTask}>Add</button>\r\n                      {/* không thêm gì cả gọi tới linkList rồi gọi tới hàm closeForm của TaskLish thay đổi giá trị của showAddForm\r\n                      và hiển thị ra màn hình gia diện TaskList  */}\r\n                        <button type=\"button\" className=\"btn btn-default\" onClick={linkList}>Back</button>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    \r\n}\r\n\r\nexport default AddTask;","\r\n\r\nfunction TodoList(props) {\r\n\r\n        return <tr>\r\n            {/* in  giá trị name khi name có trong  namep bằng hàm map  */}\r\n            <td  style={{border:'1px solid red'}}>{props.name}</td>\r\n        </tr>\r\n    \r\n}\r\n\r\nexport default TodoList;","\r\nimport React, { useState } from 'react';\r\nimport AddTask from './AddTask';\r\nimport TodoList from './TodoList';\r\n\r\nfunction TaskList() {\r\n    // khai bao useState hook để cài đặt true, false ; để mặc định là false\r\nconst [showAddForm, setshowAddform ] = useState(false);\r\n// khai bao useState hook để cài đặt hiển thị 2 task ví dụ trên màn hình\r\nconst [namep,setName]=useState([\"task-1\",\"task-2\"]);\r\n// khai bao hàm mũi tên cài đặt  showAddForm gọi trong function TaskLisk\r\n    const setStatus = () => {\r\n        setshowAddform(true);\r\n    }\r\n    // khai bao hàm mũi tên cài đặt  showAddForm gọi trong function Addtask\r\n    const closeForm = () => {\r\n        setshowAddform(false);\r\n    }\r\n    // cong thêm task mới do người dùng nhập vào 2 task đã cài trước đó\r\n    const addTask = (name) => {\r\n      namep.push(name)\r\n        \r\n    }\r\n    // nếu showAddForm === true gọi gàm Addtask\r\n   if (showAddForm === true){\r\n       return (\r\n        <AddTask addTask={addTask} closeForm={closeForm} />\r\n       )\r\n    /* showAddForm === false hiển thị nội dung bên dưới ra màn hình */\r\n    \r\n   }else {\r\n        \r\n            return (\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <br /> \r\n                    {/* onclick gọi tới setStatus thay đổi giá trị showAddForm thành true để chuyển sang hàm AddTask  */}\r\n                    <button type=\"button\" className=\"btn btn-outline-primary\" onClick={setStatus} >Add Task</button>\r\n\r\n                    <h2>List Task</h2>\r\n                    <table className=\"table table-striped\">\r\n                        \r\n                            <tr>\r\n                                <th>Name of task</th>\r\n                            </tr>\r\n                        \r\n                        \r\n                            {\r\n                                // map qua mảng namep, gửi qua name qua Todolist để in, hiển thị kết quả mảng namep\r\n                                namep.map(name=> {\r\n                                    return <TodoList name={name}\r\n                                    />\r\n                                })\r\n                            }\r\n                        \r\n                    </table>\r\n                </div>\r\n            );\r\n        \r\n   }\r\n}\r\n\r\nexport default TaskList;","import logo from './logo.svg';\nimport './App.css';\nimport TaskList from './component/TaskList';\n\nfunction App() {\n  return (\n    <TaskList />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}